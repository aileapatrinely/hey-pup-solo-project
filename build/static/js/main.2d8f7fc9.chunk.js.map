{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/dogregister.reducer.js","redux/reducers/dogimage.reducer.js","redux/reducers/chatMessages.reducer.js","redux/reducers/chatWith.reducer.js","redux/reducers/otherdog.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/login.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/dogregister.saga.js","redux/sagas/imageupload.saga.js","redux/sagas/dog.saga.js","redux/sagas/otherdog.saga.js","redux/sagas/dogedit.saga.js","redux/sagas/picedit.saga.js","redux/sagas/deleteuser.saga.js","redux/sagas/_root.saga.js","components/LogOutButton/LogOutButton.js","redux/mapStoreToProps.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginForm/LoginForm.js","components/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/MyDog/MyDog.js","components/UserPage/UserPage.js","components/ImageUploader/ImageUploader.js","components/EditPage/EditPage.js","components/EditPage/Edit.js","components/RegisterForm/RegisterForm.js","components/LandingPage/LandingPage.js","components/RegisterPage/RegisterPage.js","components/DogRegister/DogRegister.js","components/OtherDogs/OtherDogs.js","components/Chat/MessageList.js","components/Chat/Chat.js","components/ChatPage/ChatPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","userReducer","payload","dogReducer","dogImage","chatMessagesReducer","chatWithReducer","otherdogReducer","rootReducer","errors","user","dog","chatMessages","chatWith","other","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","registerDog","dogregistrationSaga","postImgUrl","imgInfoSaga","imageUrl","fetchDog","dogSaga","fetchOther","otherdogSaga","editDog","dogeditSaga","id","editPic","piceditSaga","deleteUser","deleteUserSaga","delete","rootSaga","all","dogregSaga","oDogSaga","connect","props","className","onClick","dispatch","mapStoreToProps","reduxState","store","loginMode","loginLinkData","path","text","to","Grid","container","align","item","src","alt","Footer","LoginForm","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","target","value","onSubmit","this","role","htmlFor","name","required","onChange","Component","LoginPage","gotToRegister","history","push","withRouter","ComponentToShow","ComponentToProtect","component","authRedirect","otherProps","exact","from","AboutPage","MyDog","fetchDogs","myDog","map","index","key","Box","boxShadow","picture","size","energy_level","play_style","description","xs","UserPage","onClickDelete","swal","title","icon","buttons","dangerMode","then","willDelete","deleteAccount","Button","variant","color","ImageUploader","handleFinishedUpload","info","filename","fileUrl","onFinish","s3Url","maxSize","upload","server","EditPage","owner_id","onCancelClick","onSaveClick","dataForServer","onSavePic","picData","onInputChange","input","match","params","defaultValue","low","medium","high","xsmall","small","large","xlarge","justlikescompany","lovestug","playschase","bodyslamsandwrestling","Edit","RegisterForm","email","location","LandingPage","heading","onLogin","RegisterPage","DogRegister","OtherDogs","i","chatItUp","backItUp","nextDog","otherDog","messages","useSelector","List","aria-label","length","ListItem","displayName","ListItemText","primary","message","ListItemIcon","Chip","label","socket","Chat","typedMsg","isChatty","io","currentUser","chatWithUser","roomKey","messageKey","emit","room","joinData","on","off","chatData","initWatchers","disableChat","onSubmitChatter","spacing","alignItems","TextField","fullWidth","disabled","changeMessage","ChatPage","App","exactpath","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d8f7fc9.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const dogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_DOG':\n      return action.payload;\n    case 'UNSET_DOG':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default dogReducer;\n","const dogImage = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_DOG_IMAGE':\n      return action.payload;\n    case 'UNSET_DOG_IMAGE':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default dogImage;\n","const chatMessagesReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_CHAT_MESSAGES':\n      return action.payload;\n    case 'CLEAR_CHAT_MESSAGES':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default chatMessagesReducer;\n","const chatWithReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_CHAT_WITH':\n      return action.payload;\n    case 'CLEAR_CHAT_WITH':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default chatWithReducer;\n","const otherdogReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_OTHER':\n      return action.payload;\n    case 'UNSET_OTHER':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default otherdogReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport dog from './dogregister.reducer';\nimport dogImage from './dogimage.reducer';\nimport chatMessages from './chatMessages.reducer';\nimport chatWith from './chatWith.reducer';\nimport other from './otherdog.reducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  dog,\n  dogImage, //will add dog to user account\n  chatMessages,\n  chatWith,\n  other,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n    yield put({ type: 'FETCH_DOG' });\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerDog(action) {\n  try {\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/dog/register', action.payload);\n  } catch (error) {\n    console.log('Error with user registration:', error);\n  }\n}\n\nfunction* dogregistrationSaga() {\n  yield takeLatest('REGISTER_DOG', registerDog);\n}\n\nexport default dogregistrationSaga;\n","import { takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* postImgUrl(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'applicaton/json' },\n      withCredentials: true,\n    };\n\n    const data = {\n      imageUrl: action.payload,\n    };\n    yield axios.post('/api/imageurl', data, config);\n  } catch (error) {\n    console.log('Image URL post failed:', error);\n  }\n}\n\nfunction* imgInfoSaga() {\n  yield takeLatest('POST_IMG_URL', postImgUrl);\n}\n\nexport default imgInfoSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchDog() {\n  try {\n    const response = yield axios.get('/api/dog');\n    yield put({ type: 'SET_DOG', payload: response.data });\n  } catch (error) {\n    console.log('Dog get request failed', error);\n  }\n}\n\nfunction* dogSaga() {\n  yield takeLatest('FETCH_DOG', fetchDog);\n}\n\nexport default dogSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchOther() {\n  try {\n    const response = yield axios.get('/api/fetch');\n    yield put({ type: 'SET_OTHER', payload: response.data });\n  } catch (error) {\n    console.log('Dog get request failed', error);\n  }\n}\n\nfunction* otherdogSaga() {\n  yield takeLatest('FETCH_OTHER', fetchOther);\n}\n\nexport default otherdogSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* editDog(action) {\n  try {\n    yield axios.put(`/api/edit/${action.payload.id}`, action.payload);\n    yield put({ type: 'FETCH_DOG', payload: action.payload.id });\n  } catch (error) {\n    console.log('Dog get request failed', error);\n  }\n}\n\nfunction* dogeditSaga() {\n  yield takeLatest('UPDATE_DOG', editDog);\n}\n\nexport default dogeditSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* editPic(action) {\n  try {\n    yield axios.put(`/api/picture/${action.payload.id}`, action.payload);\n    yield put({ type: 'FETCH_DOG', payload: action.payload.id });\n  } catch (error) {\n    console.log('Dog get request failed', error);\n  }\n}\n\nfunction* piceditSaga() {\n  yield takeLatest('UPDATE_PIC', editPic);\n}\n\nexport default piceditSaga;\n","import axios from 'axios';\nimport { takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* deleteUser(action) {\n  try {\n    yield axios.delete(`/api/user/${action.payload.id}`, action.payload.id);\n  } catch (error) {\n    console.log('Delete user failed', error);\n  }\n}\n\nfunction* deleteUserSaga() {\n  yield takeLatest('DELETE_USER', deleteUser);\n}\n\nexport default deleteUserSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './login.saga';\nimport registrationSaga from './registration.saga';\nimport userSaga from './user.saga';\nimport dogregSaga from './dogregister.saga';\nimport imgInfoSaga from './imageupload.saga';\nimport dogSaga from './dog.saga';\nimport oDogSaga from './otherdog.saga';\nimport dogeditSaga from './dogedit.saga';\nimport piceditSaga from './picedit.saga';\nimport deleteUser from './deleteuser.saga';\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    dogregSaga(),\n    imgInfoSaga(),\n    dogSaga(),\n    oDogSaga(),\n    dogeditSaga(),\n    piceditSaga(),\n    deleteUser(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","const mapStoreToProps = (reduxState) => {\n  return {\n    store: reduxState,\n    // reduxState properties bound directly to \"props\"\n    // ---------\n    // Instead of taking everything from state, we just want the user info.\n    // if you wanted you could write this code like this:\n    user: reduxState.user,\n    loginMode: reduxState.loginMode,\n    errors: reduxState.errors,\n    dog: reduxState.dog,\n  };\n};\n\nexport default mapStoreToProps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { Grid } from '@material-ui/core';\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: '/login',\n    text: 'Login / Register',\n  };\n\n  if (props.store.user.id != null) {\n    loginLinkData.path = '/admin';\n    loginLinkData.text = 'Home';\n  }\n\n  return (\n    <div className=\"nav\">\n      <Link to=\"/home\">\n        <Grid container align=\"center\">\n          <Grid item>\n            <img\n              className=\"logo\"\n              id=\"logo\"\n              src=\"/Hey-pup.png\"\n              alt=\"cute puppy cartoon\"\n            />\n          </Grid>\n          <Grid item>\n            <h2 className=\"nav-title\">Hey, Pup!</h2>\n          </Grid>\n        </Grid>\n      </Link>\n      <div className=\"nav-right\">\n        <Link className=\"nav-link\" to={loginLinkData.path}>\n          {/* Show this link if they are logged in or not,\n          but call this link 'Home' if they are logged in,\n          and call this link 'Login / Register' if they are not */}\n          {loginLinkData.text}\n        </Link>\n        {/* Show the link to the info page and the logout button if the user is logged in */}\n        {props.store.user.id && (\n          <>\n            <Link className=\"nav-link\" to=\"/edit\">\n              Edit\n            </Link>\n            <LogOutButton className=\"nav-link\" />\n          </>\n        )}\n        {/* Always show this link since the about page is not protected */}\n        <Link className=\"nav-link\" to=\"/about\">\n          About\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStoreToProps)(Nav);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; Prime Digital Academy\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.login}>\n        <h2>Login</h2>\n        {this.props.store.errors.loginMessage && (\n          <h3\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.store.errors.loginMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              required\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <input\n            className=\"log-in\"\n            type=\"submit\"\n            name=\"submit\"\n            value=\"Log In\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport LoginForm from '../LoginForm/LoginForm';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass LoginPage extends Component {\n  gotToRegister = (event) => {\n    this.props.history.push('/registration');\n  };\n\n  render() {\n    return (\n      <div>\n        <LoginForm />\n\n        <center>\n          <Link to=\"/home\">Register</Link>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter(LoginPage));\n","import React from 'react';\nimport {\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\nexport default connect(mapStoreToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport './AboutPage.css';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <div className=\"about\">\n      <p>\n        Welcome to Hey, Pup! A play-dating app for dogs. Finding friends for\n        your furry pal can be tough. Let us help you find a match.\n      </p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Box } from '@material-ui/core';\nimport './MyDog.css';\nimport { withRouter } from 'react-router-dom';\n\nclass MyDog extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_DOG' });\n    this.props.dispatch({ type: 'FETCH_OTHER' });\n  }\n\n  fetchDogs = (event) => {\n    this.props.history.push(`/fetch`);\n  };\n\n  editDog = (event) => {\n    this.props.history.push(`/edit`);\n  };\n\n  render() {\n    // const otherDog = this.props.store.other.map((item) => {\n    //   return item.id;\n    // });\n    console.log('dog', this.props.store.dog);\n    const myDog = this.props.store.dog.map((item, index) => {\n      return (\n        <div key={item.index}>\n          <h2>{item.name}</h2>\n          <Box boxShadow={3} align=\"center\">\n            <img src={item.picture} alt=\"A good dog.\" />\n          </Box>\n          <p align=\"center\" className=\"tinytxt\">\n            {item.size} • {item.energy_level} • {item.play_style}\n          </p>\n          <h5 className=\"aboutheader\">About {item.name}:</h5>\n          <p className=\"dogdescription\">{item.description}</p>\n        </div>\n      );\n    });\n\n    return (\n      <Grid className=\"gettinggriddy\">\n        <div>{myDog}</div>\n        <Grid xs={12} className=\"gridlft\">\n          <button onClick={this.editDog} className=\"btn btn_sizeSm btnlft\">\n            Edit Dog\n          </button>\n        </Grid>\n        <Grid xs={12} className=\"gridrt\">\n          <button onClick={this.fetchDogs} className=\"btn btn_sizeSm btnrt\">\n            Fetch Dogs!\n          </button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => ({ store });\n\nexport default connect(mapStoreToProps)(withRouter(MyDog));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport MyDog from '../MyDog/MyDog';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport swal from '@sweetalert/with-react';\nimport './UserPage.css';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nclass UserPage extends Component {\n  onClickDelete = (event) => {\n    swal({\n      title: 'Are you sure?',\n      text: 'Deleting your account is permanent!',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        this.deleteAccount();\n        swal('Poof! account has been deleted!', {\n          icon: 'success',\n        });\n      } else {\n        swal('Your account is safe!');\n      }\n    });\n  };\n\n  deleteAccount = () => {\n    this.props.dispatch({\n      type: 'DELETE_USER',\n      payload: {\n        id: this.props.store.user.id,\n      },\n    });\n    this.props.history.push('/registration');\n  };\n\n  render() {\n    return (\n      <div className=\"welcomediv\">\n        <h1 id=\"welcome\">Welcome, {this.props.store.user.username}!</h1>\n        <MyDog />\n        <div className=\"useridinfo\">\n          <p>Your ID is: {this.props.store.user.id}</p>\n          <div align=\"center\">\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={this.onClickDelete}\n            >\n              Delete Account\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStoreToProps)(withRouter(UserPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader';\n\nclass ImageUploader extends Component {\n  handleFinishedUpload = (info) => {\n    console.log('File uploaded with filename', info.filename);\n    console.log('Access it on S3 at', info.fileUrl);\n\n    this.props.dispatch({ type: 'SET_DOG_IMAGE', payload: info.fileUrl });\n  };\n  render() {\n    const uploadOptions = {\n      server: 'http://localhost:5000',\n      //   signingUrlQueryParams: {\n      //     uploadType: 'avatar',\n      //   },\n    };\n\n    const s3Url = 'https://hey-pup.s3.amazonaws.com';\n\n    return (\n      <DropzoneS3Uploader\n        onFinish={this.handleFinishedUpload}\n        s3Url={s3Url}\n        maxSize={1024 * 1024 * 5}\n        upload={uploadOptions}\n      />\n    );\n  }\n}\n\nexport default connect()(ImageUploader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport ImageUploader from '../ImageUploader/ImageUploader';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid } from '@material-ui/core';\nimport './EditPage.css';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nclass EditPage extends Component {\n  state = {\n    name: '',\n    energy_level: '',\n    size: '',\n    play_style: '',\n    description: '',\n    owner_id: '',\n    picture: '',\n  };\n\n  componentDidMount() {\n    if (!this.props.store.dog.name) {\n      this.props.dispatch({\n        type: 'FETCH_DOG',\n        payload: this.props.match.params.id,\n      });\n    }\n  }\n\n  onCancelClick = (event) => {\n    this.props.history.push(`/admin`);\n  };\n\n  onSaveClick = (event) => {\n    event.preventDefault();\n    const dataForServer = {\n      name: this.state.name,\n      energy_level: this.state.energy_level,\n      size: this.state.size,\n      play_style: this.state.play_style,\n      description: this.state.description,\n      owner_id: this.props.user.id,\n    };\n    this.props.dispatch({\n      type: 'UPDATE_DOG',\n      payload: dataForServer,\n    });\n    this.props.history.push(`/admin`);\n  };\n\n  onSavePic = (event) => {\n    event.preventDefault();\n    const picData = {\n      picture: this.props.store.dogImage,\n      owner_id: this.props.user.id,\n    };\n    this.props.dispatch({\n      type: 'UPDATE_PIC',\n      payload: picData,\n    });\n  };\n\n  onInputChange = (input) => (event) => {\n    this.setState({\n      [input]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"formPanel\">\n          <h1>Editing {this.props.store.dog.name}</h1>\n          <div>\n            <label htmlFor=\"name\">\n              Name:\n              <input\n                defaultValue={this.props.store.dog.name}\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.onInputChange('name')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"energy_level\">\n              Energy Level:\n              <select\n                name=\"energy_level\"\n                onChange={this.onInputChange('energy_level')}\n                defaultValue={this.props.store.dog.energy_level}\n              >\n                <option>Choose one</option>\n                <option value={this.state.energy_level.low}>Low</option>\n                <option value={this.state.energy_level.medium}>Medium</option>\n                <option value={this.state.energy_level.high}>High</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"size\">\n              Size:\n              <select\n                name=\"size\"\n                defaultValue={this.props.store.dog.size}\n                onChange={this.onInputChange('size')}\n              >\n                <option>Choose one</option>\n                <option value={this.state.size.xsmall}>X-Small</option>\n                <option value={this.state.size.small}>Small</option>\n                <option value={this.state.size.medium}>Medium</option>\n                <option value={this.state.size.large}>Large</option>\n                <option value={this.state.size.xlarge}>X-Large</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"play_style\">\n              Play-style:\n              <select\n                name=\"play_style\"\n                defaultValue={this.props.store.dog.play_style}\n                onChange={this.onInputChange('play_style')}\n              >\n                <option>Choose one</option>\n                <option value={this.state.play_style.justlikescompany}>\n                  Just likes company\n                </option>\n                <option value={this.state.play_style.lovestug}>\n                  Loves Tug\n                </option>\n                <option value={this.state.play_style.playschase}>\n                  Plays Chase\n                </option>\n                <option value={this.state.play_style.bodyslamsandwrestling}>\n                  Body slams and Wrestling\n                </option>\n                <option value={'other'}>Other</option>\n              </select>\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"description\">\n              Description:\n              <input\n                type=\"text\"\n                defaultValue={this.props.store.dog.description}\n                name=\"description\"\n                value={this.state.description}\n                onChange={this.onInputChange('description')}\n              />\n            </label>\n          </div>\n          <div>\n            <ImageUploader />\n            <Button onClick={this.onSavePic}>Save Pic</Button>\n          </div>\n        </form>\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <button\n                className=\"btn btn_sizeFull btnlft\"\n                onClick={this.onCancelClick}\n              >\n                Cancel\n              </button>\n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid item xs={4}>\n              <button\n                className=\"btn btn_sizeFull btnrt\"\n                onSubmit={this.onSaveClick}\n                onClick={this.onSaveClick}\n              >\n                Save\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter(EditPage));\n","import React, { Component } from 'react';\nimport EditPage from './EditPage';\n\nclass Edit extends Component {\n  render() {\n    return (\n      <div>\n        <EditPage />\n      </div>\n    );\n  }\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\nclass RegisterForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n    location: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER',\n      payload: {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        location: this.state.location,\n      },\n    });\n    this.props.history.push('/dogregistration');\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerUser}>\n        <h2>Register User</h2>\n        {this.props.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              required\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              required\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"email\">\n            Email:\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              required\n              onChange={this.handleInputChangeFor('email')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"location\">\n            Location:\n            <input\n              type=\"text\"\n              name=\"location\"\n              value={this.state.location}\n              required\n              onChange={this.handleInputChangeFor('location')}\n            />\n          </label>\n        </div>\n        <div>\n          <input\n            className=\"register\"\n            type=\"submit\"\n            name=\"submit\"\n            value=\"Register\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(withRouter(RegisterForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport './LandingPage.css';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nclass LandingPage extends Component {\n  state = {\n    heading: `Welcome to Hey, Pup!`,\n  };\n\n  onLogin = (event) => {\n    this.props.history.push('/login');\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>{this.state.heading}</h2>\n\n        <div className=\"grid\">\n          <div className=\"grid-col grid-col_4\">\n            <RegisterForm />\n\n            <center>\n              <h4>Already a Member?</h4>\n              <button className=\"btn btn_sizeSm\" onClick={this.onLogin}>\n                Login\n              </button>\n            </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LandingPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  render() {\n    return (\n      <div>\n        <RegisterForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {\n              this.props.history.push('/dogregistration');\n            }}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport ImageUploader from '../ImageUploader/ImageUploader';\n\nclass DogRegister extends Component {\n  state = {\n    name: '',\n    energy_level: '',\n    size: '',\n    play_style: '',\n    description: '',\n    owner_id: '',\n    picture: '',\n  };\n\n  registerDog = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: 'REGISTER_DOG',\n      payload: {\n        name: this.state.name,\n        energy_level: this.state.energy_level,\n        size: this.state.size,\n        play_style: this.state.play_style,\n        description: this.state.description,\n        owner_id: this.props.user.id,\n        picture: this.props.store.dogImage,\n      },\n    });\n    this.props.dispatch({\n      type: 'FETCH_DOG',\n    });\n    this.props.history.push('/admin');\n  }; // end registerUser\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.registerDog}>\n        <h2>Register Dog</h2>\n        {this.props.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"name\">\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              required\n              onChange={this.handleInputChangeFor('name')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"energy_level\">\n            Energy Level:\n            <select\n              name=\"energy_level\"\n              onChange={this.handleInputChangeFor('energy_level')}\n            >\n              <option>Choose one</option>\n              <option value={this.state.energy_level.low}>Low</option>\n              <option value={this.state.energy_level.medium}>Medium</option>\n              <option value={this.state.energy_level.high}>High</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"size\">\n            Size:\n            <select\n              name=\"size\"\n              required\n              onChange={this.handleInputChangeFor('size')}\n            >\n              <option>Choose one</option>\n              <option value={this.state.size.xsmall}>X-Small</option>\n              <option value={this.state.size.small}>Small</option>\n              <option value={this.state.size.medium}>Medium</option>\n              <option value={this.state.size.large}>Large</option>\n              <option value={this.state.size.xlarge}>X-Large</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"play_style\">\n            Play-style:\n            <select\n              name=\"play_style\"\n              onChange={this.handleInputChangeFor('play_style')}\n            >\n              <option>Choose one</option>\n              <option value={this.state.play_style.justlikescompany}>\n                Just likes company\n              </option>\n              <option value={this.state.play_style.lovestug}>Loves Tug</option>\n              <option value={this.state.play_style.playschase}>\n                Plays Chase\n              </option>\n              <option value={this.state.play_style.bodyslamsandwrestling}>\n                Body slams and Wrestling\n              </option>\n              <option value={this.state.play_style.other}>Other</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"description\">\n            Description:\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.handleInputChangeFor('description')}\n            />\n          </label>\n        </div>\n        <div>\n          <ImageUploader />\n        </div>\n        <div>\n          <input\n            className=\"register\"\n            type=\"submit\"\n            name=\"submit\"\n            value=\"Register\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(DogRegister);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Box } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport './OtherDogs.css';\n\nclass OtherDogs extends Component {\n  state = {\n    i: 0,\n  };\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_OTHER' });\n  }\n\n  chatItUp = (owner_id) => (event) => {\n    this.props.dispatch({ type: 'SET_CHAT_WITH', payload: owner_id });\n    this.props.history.push('/chat');\n  };\n\n  backItUp = (event) => {\n    if (this.state.i > 0)\n      this.setState({\n        ...this.state.i--,\n      });\n  };\n\n  nextDog = (event) => {\n    this.setState({\n      ...this.state.i++,\n    });\n  };\n\n  render() {\n    const otherDog = this.props.store.other.map((item, index) => {\n      return (\n        <div key={index}>\n          <h2>{item.name}</h2>\n          <Box boxShadow={3} align=\"center\">\n            <img src={item.picture} alt=\"A good dog.\" />\n          </Box>\n          <p align=\"center\" className=\"tinytxt\">\n            {item.size} • {item.energy_level} • {item.play_style}\n          </p>\n          <h5 className=\"aboutheader\">About {item.name}:</h5>\n          <p className=\"dogdescription\">{item.description}</p>\n          <div>\n            <Grid container>\n              <Grid item xs={4}>\n                <button\n                  onClick={this.backItUp}\n                  className=\"btn btn_sizeFull btnlft\"\n                >\n                  Back\n                </button>\n              </Grid>\n              <Grid item xs={3}></Grid>\n              <Grid item xs={4}>\n                <button\n                  onClick={this.nextDog}\n                  className=\"btn btn_sizeFull btnrt\"\n                >\n                  Next\n                </button>\n              </Grid>\n            </Grid>\n          </div>\n          <div>\n            <Grid container className=\"btncenter\">\n              <Grid item xs={6}>\n                <button\n                  className=\"btn btn_sizeFull\"\n                  onClick={this.chatItUp(item.owner_id)}\n                >\n                  Chat\n                </button>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <Grid className=\"gettinggriddy\">\n        <div>{otherDog[this.state.i]}</div>\n      </Grid>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => ({ store });\n\nexport default connect(mapStoreToProps)(withRouter(OtherDogs));\n","import React from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nfunction MessageList(props) {\n  const { user } = props;\n  const messages = useSelector((store) => store.chatMessages);\n\n  return (\n    <List component=\"ul\" aria-label=\"messages\">\n      {messages.length > 0 ? (\n        messages.map((item, index) => {\n          return (\n            <ListItem key={index}>\n              {item.displayName === user.username ? (\n                <>\n                  <ListItemText primary={item.message} />\n                  <ListItemIcon>\n                    <Chip label={item.displayName} color=\"primary\" />\n                  </ListItemIcon>\n                </>\n              ) : (\n                <>\n                  <ListItemIcon>\n                    <Chip label={item.displayName} />\n                  </ListItemIcon>\n                  <ListItemText primary={item.message} />\n                </>\n              )}\n            </ListItem>\n          );\n        })\n      ) : (\n        <ListItem>\n          <ListItemText primary=\"No messages.\" />\n        </ListItem>\n      )}\n    </List>\n  );\n}\n\nexport default connect(mapStoreToProps)(MessageList);\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport MessageList from './MessageList';\n\nlet socket = {};\nclass Chat extends Component {\n  state = {\n    typedMsg: '',\n    messages: [],\n  };\n\n  initWatchers() {\n    console.log(this.props.store.user.id, this.props.store.chatWith);\n    if (\n      !this.props.store.user.id ||\n      !this.props.store.chatWith ||\n      this.isChatty\n    ) {\n      return false;\n    }\n    socket = io.connect('http://localhost:3000');\n\n    this.isChatty = true;\n\n    const currentUser = this.props.store.user.id;\n    const chatWithUser = this.props.store.chatWith;\n    this.roomKey =\n      currentUser < chatWithUser\n        ? `room_${currentUser}_${chatWithUser}`\n        : `room_${chatWithUser}_${currentUser}`;\n    this.messageKey = `new_message_${this.roomKey}`;\n    console.log('message key:', this.messageKey);\n    socket.emit(\n      'JOIN_CHAT',\n      {\n        displayName: this.props.store.user.username,\n        room: this.roomKey,\n      },\n      (joinData) => {\n        console.log('Joined chat:', joinData);\n      }\n    );\n\n    socket.on(this.messageKey, (data) => {\n      const { messages } = data;\n      this.props.dispatch({ type: 'SET_CHAT_MESSAGES', payload: messages });\n    });\n  }\n\n  // socket.on(`new_message_room_${this.props.store.user.id}`, (data) => {\n  //   const { messages } = data;\n  //   this.setState({\n  //     messages,\n  //   });\n  // });\n\n  componentWillUnmount() {\n    if (socket.emit) {\n      socket.emit('disconnect');\n      socket.off();\n    }\n  }\n\n  changeMessage(event) {\n    this.setState({\n      typedMsg: event.target.value,\n    });\n  }\n  onSubmitChatter(event) {\n    event.preventDefault();\n    console.log('Send Message', socket);\n    socket.emit(\n      'CHAT_MESSAGE',\n      {\n        room: this.roomKey,\n        displayName: this.props.store.user.username,\n        message: this.state.typedMsg,\n      },\n      (chatData) => {\n        console.log('Emit msg:', chatData);\n      }\n    );\n\n    this.setState({\n      typedMsg: '',\n    });\n  }\n\n  render() {\n    this.initWatchers();\n\n    const disableChat = !this.props.store.chatWith;\n    console.log('disableChat:', disableChat);\n\n    return (\n      <div>\n        <MessageList />\n        <form onSubmit={(event) => this.onSubmitChatter(event)}>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={8}>\n              <TextField\n                variant=\"filled\"\n                fullWidth\n                label=\"Message\"\n                disabled={disableChat}\n                value={this.state.typedMsg}\n                onChange={(event) => this.changeMessage(event)}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                fullWidth\n                size=\"large\"\n                disabled={disableChat}\n              >\n                SEND\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(Chat);\n","import React, { Component } from 'react';\nimport Chat from '../Chat/Chat';\n\nclass ChatPage extends Component {\n  render() {\n    return (\n      <div>\n        <Chat />\n      </div>\n    );\n  }\n}\n\nexport default ChatPage;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport Edit from '../EditPage/Edit';\nimport LandingPage from '../LandingPage/LandingPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\nimport './App.css';\nimport DogRegister from '../DogRegister/DogRegister';\nimport OtherDogs from '../OtherDogs/OtherDogs';\nimport ChatPage from '../ChatPage/ChatPage';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route exact path=\"/about\" component={AboutPage} />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n            <ProtectedRoute exact path=\"/admin\" component={UserPage} />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute exact path=\"/edit\" component={Edit} />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will be redirected to the authRedirect path provided. */}\n\n            <ProtectedRoute\n              exact\n              path=\"/login\"\n              authRedirect=\"/admin\"\n              component={LoginPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/registration\"\n              component={RegisterPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/dogregistration\"\n              component={DogRegister}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              authRedirect=\"/admin\"\n              component={LandingPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/fetch\"\n              // authRedirect=\"/admin\"\n              component={OtherDogs}\n            />\n            <ProtectedRoute exactpath=\"/chat\" component={ChatPage} />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}